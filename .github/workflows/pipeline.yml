name: React CI Pipeline

on:
  pull_request:
    branches: 
      - main
  workflow_dispatch: 

jobs:
  lint:
    name: Linting the code
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v3
        
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📥 Check npm
        run: npm -v

      - name: 🔧 Install React & React-DOM (if needed)
        run: npm install react react-dom

      - name: 📦 Install Dependencies
        run: npm install
        
      - name: 🧹 Linting the code
        run: npm run lint

  build:
    name: Build React App
    runs-on: ubuntu-latest
    needs: lint  # 👈 This makes build run only after lint passes

    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 📥 Check npm
        run: npm -v

      - name: 🔧 Install React & React-DOM (if needed)
        run: npm install react react-dom

      - name: 📦 Install Dependencies
        run: npm install
        
      - name: 🛠️ Run Build
        run: npm run build

      - name: ☁️ Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: dist/
  deploy:
    name: 🚀 Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: build  # depends on successful build job

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v3

      - name: ⬇️ Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: dist

      - name: 📥 Install Wrangler
        run: npm install -g wrangler
      - name: 🔐 Verify Cloudflare API Token
        run: |
            echo "Verifying Cloudflare API token..."
            RESPONSE=$(curl -s -o cf_verify.json -w "%{http_code}" \
              -X GET "https://api.cloudflare.com/client/v4/user/tokens/verify" \
              -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN")

            cat cf_verify.json

            if [ "$RESPONSE" -ne 200 ]; then
              echo "❌ Invalid or unauthorized Cloudflare API token!"
                exit 1
            else
              echo "✅ Token is valid and authorized!"
            fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

